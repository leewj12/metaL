plugins {
	// Java 플러그인: 자바 애플리케이션을 빌드할 때 필요한 플러그인
	id 'java'
	// Spring Boot 플러그인: Spring Boot 애플리케이션을 빌드하고 실행할 때 필요한 플러그인
	id 'org.springframework.boot' version '3.3.6'
	// Spring Dependency Management 플러그인: 의존성 관리를 위한 플러그인
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'kosmo'  // 그룹 ID 설정 (보통 조직이나 프로젝트의 도메인)
version = '0.0.1-SNAPSHOT'  // 버전 설정 (현재 버전은 개발 중이라는 의미의 SNAPSHOT)

java {
	toolchain {
		// 자바 버전 설정 (이 프로젝트에서는 Java 17 사용)
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	// annotationProcessor는 compileOnly 의존성을 확장하도록 설정
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	// 의존성 라이브러리를 가져올 저장소 설정 (Maven 중앙 저장소)
	mavenCentral()
}

dependencies {
	// ===================== Spring Boot 관련 의존성 =====================
	// Spring Boot JPA 스타터 의존성: Spring Data JPA 관련 기능 제공
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Spring Boot 웹 스타터 의존성: 웹 애플리케이션을 위한 기본 설정과 의존성 제공
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Spring Boot Thymeleaf 스타터 의존성: Thymeleaf 템플릿 엔진을 사용한 템플릿 렌더링 제공
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	// Spring Security 스타터 의존성: 보안 관련 기능 제공
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// Spring Security와 Thymeleaf 연동을 위한 의존성
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	// ===================== MyBatis 관련 의존성 =====================
	// MyBatis Spring Boot 스타터 의존성: MyBatis와 Spring Boot의 통합을 위한 의존성
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	// MyBatis 테스트 스타터 의존성: MyBatis와 Spring Boot 통합 테스트를 위한 의존성
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'

	// ===================== 기타 의존성 =====================
	// Lombok 의존성: 코드에서 반복되는 부분을 줄여주는 라이브러리
	compileOnly 'org.projectlombok:lombok'
	// Spring Boot DevTools 의존성: 개발 중에 유용한 자동 리로딩과 디버깅 기능 제공
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// MySQL JDBC 드라이버 의존성: MySQL 데이터베이스와 연결하기 위한 드라이버
	runtimeOnly 'com.mysql:mysql-connector-j'
	// Oracle JDBC 드라이버 의존성: Oracle 데이터베이스와 연결하기 위한 드라이버
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	// Lombok의 어노테이션 프로세서 의존성
	annotationProcessor 'org.projectlombok:lombok'

	// ===================== 테스트 관련 의존성 =====================
	// Spring Boot 테스트 스타터 의존성: Spring Boot 애플리케이션의 테스트를 위한 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// Spring Security 테스트 의존성: Spring Security 기능을 테스트할 수 있도록 지원하는 의존성
	testImplementation 'org.springframework.security:spring-security-test'
	// JUnit 5 플랫폼 런처 의존성: JUnit 테스트 실행을 위한 런처 제공
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// 이메일 전송 관련 의존성 (spring-boot-starter-mail)
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Jakarta Mail API (Spring Boot 3.x와 호환)
	implementation 'jakarta.mail:jakarta.mail-api:2.1.0'

	// ===================== OAuth2 관련 의존성 =====================
	// OAuth2 클라이언트 의존성: OAuth2 인증을 사용하는 클라이언트 애플리케이션을 위한 의존성
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// OAuth2 리소스 서버 의존성: 리소스 서버에서 OAuth2를 사용하여 보호된 자원을 제공하기 위한 의존성
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
}

tasks.named('test') {
	// JUnit 플랫폼을 사용하여 테스트를 실행하도록 설정
	useJUnitPlatform()
}
